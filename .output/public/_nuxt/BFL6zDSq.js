import{U as C,b5 as j,u as R,b6 as M,N as H,b7 as U,b8 as F,r as L,b9 as N,av as V,ad as z,b0 as G,J as T,ba as I,aL as J,aT as W,c as q,bb as Q,bc as X}from"#entry";const Y={trailing:!0};function Z(a,e=25,r={}){if(r={...Y,...r},!Number.isFinite(e))throw new TypeError("Expected `wait` to be a finite number");let c,s,n=[],t,d;const _=(u,h)=>(t=$(a,u,h),t.finally(()=>{if(t=null,r.trailing&&d&&!s){const D=_(u,d);return d=null,D}}),t),y=function(...u){return r.trailing&&(d=u),t||new Promise(h=>{const D=!s&&r.leading;clearTimeout(s),s=setTimeout(()=>{s=null;const o=r.leading?c:_(this,u);d=null;for(const b of n)b(o);n=[]},e),D?(c=_(this,u),h(c)):n.push(h)})},i=u=>{u&&(clearTimeout(u),s=null)};return y.isPending=()=>!!s,y.cancel=()=>{i(s),n=[],d=null},y.flush=()=>{if(i(s),!d||t)return;const u=d;return d=null,_(this,u)},y}async function $(a,e,r){return await a.apply(e,r)}function aa(...a){const e=typeof a[a.length-1]=="string"?a.pop():void 0;x(a[0],a[1])&&a.unshift(e);let[r,c,s={}]=a;const n=C(()=>j(r));if(typeof n.value!="string")throw new TypeError("[nuxt] [useAsyncData] key must be a string.");if(typeof c!="function")throw new TypeError("[nuxt] [useAsyncData] handler must be a function.");const t=R();s.server??=!0,s.default??=k,s.getCachedData??=B,s.lazy??=!1,s.immediate??=!0,s.deep??=M.deep,s.dedupe??="cancel",s._functionName,t._asyncData[n.value];const d={cause:"initial",dedupe:s.dedupe};t._asyncData[n.value]?._init||(d.cachedData=s.getCachedData(n.value,t,{cause:"initial"}),t._asyncData[n.value]=O(t,n.value,c,s,d.cachedData));const _=t._asyncData[n.value];_._deps++;const y=()=>t._asyncData[n.value].execute(d),i=s.server!==!1&&t.payload.serverRendered;{let D=function(l){const f=t._asyncData[l];f?._deps&&(f._deps--,f._deps===0&&f?._off())};const o=J();if(o&&i&&s.immediate&&!o.sp&&(o.sp=[]),o&&!o._nuxtOnBeforeMountCbs){o._nuxtOnBeforeMountCbs=[];const l=o._nuxtOnBeforeMountCbs;W(()=>{l.forEach(f=>{f()}),l.splice(0,l.length)}),q(()=>l.splice(0,l.length))}const b=o&&(o._nuxtClientOnly||Q(X,!1));i&&t.isHydrating&&(_.error.value||_.data.value!==void 0)?_.status.value=_.error.value?"error":"success":o&&(!b&&t.payload.serverRendered&&t.isHydrating||s.lazy)&&s.immediate?o._nuxtOnBeforeMountCbs.push(y):s.immediate&&_.status.value!=="success"&&y();const v=I(),m=H([n,...s.watch||[]],([l],[f])=>{if((l||f)&&l!==f){const w=t._asyncData[f]?.data.value!==void 0,S=t._asyncDataPromises[f]!==void 0;f&&D(f);const E={cause:"initial",dedupe:s.dedupe};if(!t._asyncData[l]?._init){let g;f&&w?g=t._asyncData[f]?.data.value:(g=s.getCachedData(l,t,{cause:"initial"}),E.cachedData=g),t._asyncData[l]=O(t,l,c,s,g)}t._asyncData[l]._deps++,(s.immediate||w||S)&&t._asyncData[l].execute(E)}else _._execute({cause:"watch",dedupe:s.dedupe})},{flush:"sync"});v&&U(()=>{m(),D(n.value)})}const u={data:P(()=>t._asyncData[n.value]?.data),pending:P(()=>t._asyncData[n.value]?.pending),status:P(()=>t._asyncData[n.value]?.status),error:P(()=>t._asyncData[n.value]?.error),refresh:(...D)=>t._asyncData[n.value].execute(...D),execute:(...D)=>t._asyncData[n.value].execute(...D),clear:()=>p(t,n.value)},h=Promise.resolve(t._asyncDataPromises[n.value]).then(()=>u);return Object.assign(h,u),h}function P(a){return C({get(){return a()?.value},set(e){const r=a();r&&(r.value=e)}})}function x(a,e){return!(typeof a=="string"||typeof a=="object"&&a!==null||typeof a=="function"&&typeof e=="function")}async function ea(a){await new Promise(r=>F(r)),await R().hooks.callHookParallel("app:data:refresh",void 0)}function p(a,e){e in a.payload.data&&(a.payload.data[e]=void 0),e in a.payload._errors&&(a.payload._errors[e]=void 0),a._asyncData[e]&&(a._asyncData[e].data.value=T(a._asyncData[e]._default()),a._asyncData[e].error.value=void 0,a._asyncData[e].status.value="idle"),e in a._asyncDataPromises&&(a._asyncDataPromises[e]&&(a._asyncDataPromises[e].cancelled=!0),a._asyncDataPromises[e]=void 0)}function K(a,e){const r={};for(const c of e)r[c]=a[c];return r}function O(a,e,r,c,s){a.payload._errors[e]??=void 0;const n=c.getCachedData!==B,t=r,d=c.deep?L:N,_=s!==void 0,y=a.hook("app:data:refresh",async u=>{(!u||u.includes(e))&&await i.execute({cause:"refresh:hook"})}),i={data:d(_?s:c.default()),pending:C(()=>i.status.value==="pending"),error:V(a.payload._errors,e),status:N("idle"),execute:(...u)=>{const[h,D=void 0]=u,o=h&&D===void 0&&typeof h=="object"?h:{};if(a._asyncDataPromises[e]){if((o.dedupe??c.dedupe)==="defer")return a._asyncDataPromises[e];a._asyncDataPromises[e].cancelled=!0}{const v="cachedData"in o?o.cachedData:c.getCachedData(e,a,{cause:o.cause??"refresh:manual"});if(v!==void 0)return a.payload.data[e]=i.data.value=v,i.error.value=void 0,i.status.value="success",Promise.resolve(v)}i.status.value="pending";const b=new Promise((v,m)=>{try{v(t(a))}catch(l){m(l)}}).then(async v=>{if(b.cancelled)return a._asyncDataPromises[e];let m=v;c.transform&&(m=await c.transform(v)),c.pick&&(m=K(m,c.pick)),a.payload.data[e]=m,i.data.value=m,i.error.value=void 0,i.status.value="success"}).catch(v=>{if(b.cancelled)return a._asyncDataPromises[e];i.error.value=G(v),i.data.value=T(c.default()),i.status.value="error"}).finally(()=>{b.cancelled||delete a._asyncDataPromises[e]});return a._asyncDataPromises[e]=b,a._asyncDataPromises[e]},_execute:Z((...u)=>i.execute(...u),0,{leading:!0}),_default:c.default,_deps:0,_init:!0,_hash:void 0,_off:()=>{y(),a._asyncData[e]?._init&&(a._asyncData[e]._init=!1),n||z(()=>{a._asyncData[e]?._init||(p(a,e),i.execute=()=>Promise.resolve())})}};return i}const k=()=>{},B=(a,e,r)=>{if(e.isHydrating)return e.payload.data[a];if(r.cause!=="refresh:manual"&&r.cause!=="refresh:hook")return e.static.data[a]};export{ea as r,aa as u};
